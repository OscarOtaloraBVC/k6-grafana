apiVersion: apps/v1
kind: Deployment
metadata:
  name: k6-prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k6-prometheus
  template:
    metadata:
      labels:
        app: k6-prometheus
    spec:
      containers:
      - name: k6
        image: grafana/k6:latest
        command: ["sh", "-c"]
        args:
          - |
            # Usando el servicio DNS interno de Kubernetes para conectar con Prometheus
            export K6_PROMETHEUS_RW_SERVER_URL=http://127.0.0.1:9090/api/v1/write
            export K6_PROMETHEUS_RW_TREND_STATS="p(95),p(50),min,max,avg"
            export K6_PROMETHEUS_RW_INSECURE_SKIP_TLS_VERIFY="true"
            k6 run --out experimental-prometheus-rw /scripts/01_harbor_pull_test_grafana.js
            sleep infinity
        ports:
        - containerPort: 5656
          name: metrics
        volumeMounts:
        - name: k6-scripts
          mountPath: /scripts
          
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
        args:
        - '--web.enable-remote-write-receiver'  # Habilita el endpoint de remote write
        - '--enable-feature=remote-write-receiver'  # Asegura compatibilidad
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: k6-scripts
        configMap:
          name: k6-scripts
      - name: prometheus-config
        configMap:
          name: prometheus-config

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    scrape_configs:
      - job_name: 'k6-metrics'
        static_configs:
          - targets: ['localhost:5656']
        metrics_path: '/metrics'
        honor_labels: true
        scheme: http

    # Configuraci√≥n adicional para remote write
    remote_write:
    - url: http://localhost:9090/api/v1/write
      queue_config:
        max_samples_per_send: 1000
        capacity: 10000
        max_shards: 300
      write_relabel_configs:
      - source_labels: [__name__]
        regex: 'harbor_.*'
        action: keep

---

apiVersion: v1
kind: Service
metadata:
  name: k6-prometheus-service
spec:
  selector:
    app: k6-prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
      name: prometheus
    - protocol: TCP
      port: 5656
      targetPort: 5656
      name: k6-metrics